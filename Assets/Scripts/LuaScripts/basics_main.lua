---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2021/4/23 10:05
---

require("LuaConf/RequireLuaFiles")

local BasicMain  = class("BasicMain")

function awake()
    print("lua awake...")
    BasicMain.New()
end

function start()
end


function OnClick()
    print('you click')
end

function BasicMain:Ctor()
    print_r(self, "base")
    self.groot = GRoot.inst  -- C# 中已经实例化了
    fgui.UIPackage.AddPackage("UI/Basics")
    local _view = fgui.UIPackage.CreateObject("Basics", "Main")
    self.groot:AddChild(_view)

    self._demoObjects = {}

    self._backBtn = _view:GetChild("btn_Back")
    self._backBtn.onClick:Add(handler(self, self.onClickBack))

    self._demoContainer = _view:GetChild("container");
    self._cc = _view:GetController("c1");

    local cnt = _view.numChildren
    for i = 1, cnt do
        local obj = _view:GetChildAt(i - 1)

        if obj.group then
            --print("obj.group : ",obj.group.name)

        end
        if obj.group ~= null and obj.group.name == "btns" then
            obj.onClick:Add(handler(self, self.runDemo))
        end
    end
end

function BasicMain:runDemo(context, a)
    print("context:getSender:", context.sender.name)
    local name = context.sender.name
    name = string.sub(name, 5)
    local v = self._demoObjects[name]
    if not v then
        v = fgui.UIPackage.CreateObject("Basics", "Demo_" .. name)
        self._demoObjects[name] = v
    end

    self._demoContainer:RemoveChildren()
    self._demoContainer:AddChild(v)
    self._cc.selectedIndex = 1
    self._backBtn.visible = true

    if (name == "Text") then
        self:playText();
    elseif (name == "Depth") then
        self:playDepth();
    elseif (name == "Window") then
        self:playWindow();
    elseif (name == "Drag&Drop") then
        self:playDragDrop();
    elseif (name == "Popup") then
        self:playPopup();
    elseif name == "ProgressBar" then
        self:playProgress()
    end
end

function BasicMain:onClickBack(context)
    if self._cc.selectedIndex == 0 then
        print("can not click this!")
        return
    end
    self._cc.selectedIndex = 0
    self._backBtn.visible = false
end

local startPos = CS.UnityEngine.Vector2(0,0)
function BasicMain:playDepth()
    local obj = self._demoObjects["Depth"]
    local testContainer = obj:GetChild("n22")
    local fixedObj = testContainer:GetChild("n0")
    fixedObj.sortingOrder = 100
    fixedObj.draggable = true

    local numChildren = testContainer.numChildren
    local i = 1
    while (i <= numChildren) do
        local child = testContainer:GetChildAt(i - 1)
        if (child ~= fixedObj) then

            testContainer:RemoveChildAt(i)
            numChildren = numChildren - 1
        else
            i = i + 1
        end
    end
    startPos = CS.UnityEngine.Vector2(fixedObj.x, fixedObj.y)

    obj:GetChild("btn0").onClick:Add(function(context)
        local graph = fgui.GGraph()
        startPos.x = startPos.x + 10
        startPos.y = startPos.y + 10
        graph.xy = startPos
        graph:DrawRect(150, 150, 1, CS.UnityEngine.Color.black, CS.UnityEngine.Color.red)
        obj:GetChild("n22"):AddChild(graph);
    end)

    obj:GetChild("btn1").onClick:Add(function(context)
        local graph = fgui.GGraph()
        startPos.x = startPos.x + 10
        startPos.y = startPos.y + 10
        graph.xy = startPos
        graph:DrawRect(150, 150, 1, CS.UnityEngine.Color.black, CS.UnityEngine.Color.red)
        obj:GetChild("n22"):AddChild(graph);
        graph.sortingOrder = 200
    end)

end

function BasicMain:playPopup()
    if (self._pm == nil) then
        self._pm = fgui.PopupMenu("ui://Basics/PopupMenu")  -- 也可以通过配置 UIConfig.popupMenu 来免去用Create函数
        print(self.onClickMenu, self)
        self._pm:AddItem("Item 1", xutil.bind(self.onClickMenu, self));
        self._pm:AddItem("Item 2", xutil.bind(self.onClickMenu, self));
        self._pm:AddItem("Item 3", xutil.bind(self.onClickMenu, self));
        self._pm:AddItem("Item 4", xutil.bind(self.onClickMenu, self));
    end

    if (self._popupCom == nil) then
        self._popupCom = fgui.UIPackage.CreateObject("Basics", "Component12");
        -- self._popupCom:center();
    end

    local obj = self._demoObjects["Popup"]
    obj:GetChild("n0").onClick:Add(function(context)
        self._pm:Show(context.sender, CS.FairyGUI.PopupDirection.Down);
    end)

    obj:GetChild("n1").onClick:Add(function(context)
        print("1111111",self._popupCom,self.groot)
        self.groot:ShowPopup(self._popupCom);
    end)

    obj.onRightClick:Add(function(context)
        self._pm:Show();
    end)
end

function BasicMain:playWindow()
    local obj = self._demoObjects["Window"]

    if (self._winA == nil) then
        self._winA = require("Window1").Create()

        self._winB = require("Window2").Create()

        obj:GetChild("n0").onClick:Add(function(context)
            self._winA:Show()
        end)

        obj:GetChild("n1").onClick:Add(function(context)
            self._winB:Show()
        end)
    end

end

function BasicMain:playDragDrop()

    local obj = self._demoObjects["Drag&Drop"]
    obj:getChild("a"):setDraggable(true);

    local b = obj:getChild("b");
    b:setDraggable(true);
    b:addEventListener(fgui.UIEventType.DragStart, function(context)
        context:preventDefault();
        fgui.DragDropManager:getInstance():startDrag(b:getIcon(), b:getIcon(), context:getInput():getTouchId());
    end)

    local c = obj:getChild("c");
    c:setIcon("")
    c:addEventListener(fgui.UIEventType.Drop, function(context)
        c:setIcon(context:getDataValue());
    end)

    local bounds = obj:getChild("n7")
    local size = bounds:getSize()
    local rect = bounds:transformRect(cc.rect(0, 0, size.width, size.height), self.groot);
    dump(rect)
    rect.x = rect.x - obj:getParent():getX()
    ----
    print("---1",obj:getParent():getX())
    local d = obj:getChild("d")
    d:setDraggable(true)
    d:setDragBounds(rect)

end

function BasicMain:onClickMenu(context)
    -- local itemObject = context:getData();
    print(context)
    local itemObject = context.data;
    print("click ", itemObject.text);
end

function BasicMain:playText(context)

end

function BasicMain:playProgress( )
    local obj = self._demoObjects["ProgressBar"]
    local scheduler = cc.Director:getInstance():getScheduler()
    local schedulerID = scheduler:scheduleScriptFunc(function(dt)
        local cnt = obj:numChildren();
        for i = 1, cnt do
            local child = obj:getChildAt(i - 1)
            child:setValue(child:getValue() + 1)
            if (child:getValue() > child:getMax()) then
                child:setValue(child:getMin())
            end
        end
    end, 1./60, false)
    obj:addEventListener(fgui.UIEventType.Exit, function(context)
        scheduler:unscheduleScriptEntry(schedulerID)
    end)
end


return BasicMain