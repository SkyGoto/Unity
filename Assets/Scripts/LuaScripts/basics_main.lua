---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2021/4/23 10:05
---TODO 未完成为window 【问题：基于C#的继承】， Graph 【interface 泛型的导入】
---

require("LuaConf/RequireLuaFiles")

local BasicMain  = class("BasicMain")

function awake()
    print("lua awake...")
    BasicMain.New()
end

function start()
end


function OnClick()
    print('you click')
end

function BasicMain:Ctor()
    print_r(self, "base")
    self.groot = GRoot.inst  -- C# 中已经实例化了
    fgui.UIPackage.AddPackage("UI/Basics")
    local _view = fgui.UIPackage.CreateObject("Basics", "Main")
    self.groot:AddChild(_view)

    self._demoObjects = {}

    self._backBtn = _view:GetChild("btn_Back")
    self._backBtn.onClick:Add(handler(self, self.onClickBack))

    self._demoContainer = _view:GetChild("container");
    self._cc = _view:GetController("c1");

    local cnt = _view.numChildren
    for i = 1, cnt do
        local obj = _view:GetChildAt(i - 1)

        if obj.group then
            --print("obj.group : ",obj.group.name)

        end
        if obj.group ~= null and obj.group.name == "btns" then
            obj.onClick:Add(handler(self, self.runDemo))
        end
    end
end

function BasicMain:runDemo(context, a)
    print("context:getSender:", context.sender.name)
    local name = context.sender.name
    name = string.sub(name, 5)
    local v = self._demoObjects[name]
    if not v then
        v = fgui.UIPackage.CreateObject("Basics", "Demo_" .. name)
        self._demoObjects[name] = v
    end

    self._demoContainer:RemoveChildren()
    self._demoContainer:AddChild(v)
    self._cc.selectedIndex = 1
    self._backBtn.visible = true

    if (name == "Text") then
        self:playText();
    elseif (name == "Depth") then
        self:playDepth();
    elseif (name == "Window") then
        self:playWindow();
    elseif (name == "Drag&Drop") then
        self:playDragDrop();
    elseif (name == "Popup") then
        self:playPopup();
    elseif name == "ProgressBar" then
        self:playProgress()
    elseif name == "Graph" then
        self:playGraph()
    elseif name == "Grid" then
        self:playGrid()
    elseif name == "Transition" then
        self:playTransition()
    end
end

function BasicMain:onClickBack(context)
    if self._cc.selectedIndex == 0 then
        print("can not click this!")
        return
    end
    self._cc.selectedIndex = 0
    self._backBtn.visible = false
end

local startPos = CS.UnityEngine.Vector2(0,0)
function BasicMain:playDepth()
    local obj = self._demoObjects["Depth"]
    local testContainer = obj:GetChild("n22")
    local fixedObj = testContainer:GetChild("n0")
    fixedObj.sortingOrder = 100
    fixedObj.draggable = true

    local numChildren = testContainer.numChildren
    local i = 1
    while (i <= numChildren) do
        local child = testContainer:GetChildAt(i - 1)
        if (child ~= fixedObj) then

            testContainer:RemoveChildAt(i)
            numChildren = numChildren - 1
        else
            i = i + 1
        end
    end
    startPos = CS.UnityEngine.Vector2(fixedObj.x, fixedObj.y)

    obj:GetChild("btn0").onClick:Add(function(context)
        local graph = fgui.GGraph()
        startPos.x = startPos.x + 10
        startPos.y = startPos.y + 10
        graph.xy = startPos
        graph:DrawRect(150, 150, 1, CS.UnityEngine.Color.black, CS.UnityEngine.Color.red)
        obj:GetChild("n22"):AddChild(graph);
    end)

    obj:GetChild("btn1").onClick:Add(function(context)
        local graph = fgui.GGraph()
        startPos.x = startPos.x + 10
        startPos.y = startPos.y + 10
        graph.xy = startPos
        graph:DrawRect(150, 150, 1, CS.UnityEngine.Color.black, CS.UnityEngine.Color.red)
        obj:GetChild("n22"):AddChild(graph);
        graph.sortingOrder = 200
    end)

end

function BasicMain:playPopup()
    if (self._pm == nil) then
        self._pm = fgui.PopupMenu("ui://Basics/PopupMenu")  -- 也可以通过配置 UIConfig.popupMenu 来免去用Create函数
        print(self.onClickMenu, self)
        self._pm:AddItem("Item 1", xutil.bind(self.onClickMenu, self));
        self._pm:AddItem("Item 2", xutil.bind(self.onClickMenu, self));
        self._pm:AddItem("Item 3", xutil.bind(self.onClickMenu, self));
        self._pm:AddItem("Item 4", xutil.bind(self.onClickMenu, self));
    end

    if (self._popupCom == nil) then
        self._popupCom = fgui.UIPackage.CreateObject("Basics", "Component12");
        -- self._popupCom:center();
    end

    local obj = self._demoObjects["Popup"]
    obj:GetChild("n0").onClick:Add(function(context)
        self._pm:Show(context.sender, CS.FairyGUI.PopupDirection.Down);
    end)

    obj:GetChild("n1").onClick:Add(function(context)
        print("1111111",self._popupCom,self.groot)
        self.groot:ShowPopup(self._popupCom);
    end)

    obj.onRightClick:Add(function(context)
        self._pm:Show();
    end)
end

function BasicMain:playWindow()
    local obj = self._demoObjects["Window"]

    if (self._winA == nil) then
        self._winA = require("Window1").Create()

        self._winB = require("Window2").Create()  -- have a bug

        obj:GetChild("n0").onClick:Add(function(context)
            self._winA:Show()
        end)

        obj:GetChild("n1").onClick:Add(function(context)
            self._winB:Show()
        end)
    end

end

function BasicMain:playDragDrop()

    local obj = self._demoObjects["Drag&Drop"]
    obj:GetChild("a").draggable = true

    local b = obj:GetChild("b");
    b.draggable = true
    b.onDragStart:Add(function(context)
        context:PreventDefault();
        CS.FairyGUI.DragDropManager.inst:StartDrag(b, b.icon, b.icon,context.data);
    end)

    local c = obj:GetChild("c");
    c.icon = ""
    c.onDrop:Add(function(context)
        c.icon = context.data
    end)

    local bounds = obj:GetChild("n7")
    local rect = bounds:TransformRect(CS.UnityEngine.Rect(0, 0, bounds.width, bounds.height), self.groot);
    rect.x = rect.x - obj.parent.x
    ----

    local d = obj:GetChild("d")
    d.draggable = true
    d.dragBounds = rect

end

function BasicMain:onClickMenu(context)
    -- local itemObject = context:getData();
    print(context)
    local itemObject = context.data;
    print("click ", itemObject.text);
end

function BasicMain:playText(context)
    local obj = self._demoObjects["Text"]
    obj:GetChild("n12").asRichTextField.onClickLink:Add(function(context)
        local t = context.sender
        t.text = "[img]ui://Basics/pet[/img][color=#FF0000]You click the link[/color]：" .. context.data
    end)
    obj:GetChild("n25").onClick:Add(function() 
        obj:GetChild("n24").text = obj:GetChild("n22").text
    end)
end

function BasicMain:playProgress( )
   local obj = self._demoObjects["ProgressBar"];
    CS.FairyGUI.Timers.inst:Add(0.001, 0, xutil.bind(self._playProgress, self))
    obj.onRemovedFromStage:Add(function()
        CS.FairyGUI.Timers.inst:Remove(xutil.bind(self._playProgress, self))
    end)
end

function BasicMain:_playProgress()
    local obj = self._demoObjects["ProgressBar"]
    local cnt = obj.numChildren
    for i = 1, cnt do
        local child = obj:GetChildAt(i-1)
        if child then
            child.value = child.value + 1
            if child.value > child.max then
                child.value = 0
            end
        end
    end
end

-- TODO 待测试
function BasicMain:playGraph()
    local obj = self._demoObjects["Graph"]
    local shape = obj:GetChild("pie").asGraph.shape
    print_r(shape.graphics, "shape")
    local ellipse = shape.graphics:GetMeshFactory() -- 该函数泛型基于接口未导出lua
    ellipse.startDegree = 30
    ellipse.endDegreee = 300
    shape.graphics:SetMeshDirty();
    shape = obj:GetChild("trapezoid").asGraph.shape;
    trapezoid = shape.graphics:GetMeshFactory()
    trapezoid.usePercentPositions = true;
    trapezoid.points:Clear();
    trapezoid.texcoords:AddRange(CS.FairyGUI.VertexBuffer.NormalizedUV)
    shape.graphics:SetMeshDirty()
    shape.graphics.texture = fgui.UIPackage:GetItemAsset("Basics", "change")

    shape = obj:GetChild("line").asGraph.shape;
    local line = shape.graphics:GetMeshFactory();
    line.lineWidthCurve = CS.UnityEngine.AnimationCurve.Linear(0, 25, 1, 10)
    line.roundEdge = true
    line.gradient = lineGradient  -- TODO ????
    line.path:Create({{0, 120, 0},{20, 120, 0},{100, 100, 0},{180, 30, 0}, 
                      {100, 0, 0}, {20, 30, 0}, {100, 100, 0}, {180, 120, 0}, {200, 120, 0},
    });
    shape.graphics:SetMeshDirty();
    GTween.To(0, 1, 5):SetEase(CS.FairyGUI.EaseType.Linear):SetTarget(shape.graphics):OnUpdate(function(t)  
        t.target:GetMeshFactory().fillEnd = t.value.x
        t.target:SetMeshDirty()
    end);

    shape = obj:GetChild("line2").asGraph.shape;
    local line2 = shape.graphics:GetMeshFactory();
    line2.lineWidth = 3;
    line2.roundEdge = true;
    line2.path:Create({
        CS.FairyGUI.GPathPoint(CS.UnityEngine.Vector3(0, 120, 0), CS.FairyGUI.GPathPoint.CurveType.Straight),
        CS.FairyGUI.GPathPoint(CS.UnityEngine.Vector3(60, 30, 0), CS.FairyGUI.GPathPoint.CurveType.Straight),
        CS.FairyGUI.GPathPoint(CS.UnityEngine.Vector3(80, 90, 0), CS.FairyGUI.GPathPoint.CurveType.Straight),
        CS.FairyGUI.GPathPoint(CS.UnityEngine.Vector3(140, 30, 0), CS.FairyGUI.GPathPoint.CurveType.Straight),
        CS.FairyGUI.GPathPoint(CS.UnityEngine.Vector3(160, 90, 0), CS.FairyGUI.GPathPoint.CurveType.Straight),
        CS.FairyGUI.GPathPoint(CS.UnityEngine.Vector3(220, 30, 0), CS.FairyGUI.GPathPoint.CurveType.Straight)
    });
    shape.graphics:SetMeshDirty();

    local image = obj:GetChild("line3");
    local line3 = image.displayObject.graphics:GetMeshFactory()
    line3.lineWidth = 30;
    line3.roundEdge = false;
    line3.path.Create({
        CS.FairyGUI.GPathPoint(CS.UnityEngine.Vector3(0, 30, 0), CS.UnityEngine.Vector3(50, -30), CS.UnityEngine.Vector3(150, -50)),
        CS.FairyGUI.GPathPoint(CS.UnityEngine.Vector3(200, 30, 0), CS.UnityEngine.Vector3(300, 130)),
        CS.FairyGUI.GPathPoint(CS.UnityEngine.Vector3(400, 30, 0))
    });
    image.displayObject.graphics.SetMeshDirty();
    
end

function BasicMain:playGrid()
    local obj = self._demoObjects["Grid"];
    local list1 = obj:GetChild("list1").asList;
    list1:RemoveChildrenToPool();
    local testNames = CS.System.Enum.GetNames(typeof(CS.UnityEngine.RuntimePlatform));
    local testColor = { CS.UnityEngine.Color.yellow, CS.UnityEngine.Color.red, CS.UnityEngine.Color.white, CS.UnityEngine.Color.cyan };
    local cnt = testNames.Length;
    for i = 1, cnt do
        local item = list1:AddItemFromPool().asButton;
        item:GetChild("t0").text = "" .. (i);
        item:GetChild("t1").text = testNames[i-1];
        print_r(CS.UnityEngine.Random.Range(0, 4), "range")
        item:GetChild("t2").asTextField.color =  testColor[math.random(1,4)];
        item:GetChild("star").asProgress.value = CS.UnityEngine.Random.Range(1, 4) / 3 * 100;
    end

    local list2 = obj:GetChild("list2").asList;
    list2:RemoveChildrenToPool();
    for i = 1, cnt do
        local item = list2:AddItemFromPool().asButton;
        item:GetChild("cb").asButton.selected = false;
        item:GetChild("t1").text = testNames[i-1];
        item:GetChild("mc").asMovieClip.playing = i % 2 == 0;
        item:GetChild("t3").text = "" .. CS.UnityEngine.Random.Range(0, 10000);
    end
end

function BasicMain:playTransition()

    local obj = self._demoObjects["Transition"];
    obj:GetChild("n2").asCom:GetTransition("t0"):Play(int.MaxValue, 0, null);
    obj:GetChild("n3").asCom:GetTransition("peng"):Play(int.MaxValue, 0, null);

    obj.onAddedToStage:Add(function()
        obj:GetChild("n2").asCom:GetTransition("t0"):Stop();
        obj:GetChild("n3").asCom:GetTransition("peng"):Stop();
    end);
end

return BasicMain